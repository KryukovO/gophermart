// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/KryukovO/gophermart/internal/gophermart/repository (interfaces: BalanceRepo)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	entities "github.com/KryukovO/gophermart/internal/gophermart/entities"
	gomock "github.com/golang/mock/gomock"
)

// MockBalanceRepo is a mock of BalanceRepo interface.
type MockBalanceRepo struct {
	ctrl     *gomock.Controller
	recorder *MockBalanceRepoMockRecorder
}

// MockBalanceRepoMockRecorder is the mock recorder for MockBalanceRepo.
type MockBalanceRepoMockRecorder struct {
	mock *MockBalanceRepo
}

// NewMockBalanceRepo creates a new mock instance.
func NewMockBalanceRepo(ctrl *gomock.Controller) *MockBalanceRepo {
	mock := &MockBalanceRepo{ctrl: ctrl}
	mock.recorder = &MockBalanceRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBalanceRepo) EXPECT() *MockBalanceRepoMockRecorder {
	return m.recorder
}

// Balance mocks base method.
func (m *MockBalanceRepo) Balance(arg0 context.Context, arg1 int64) (entities.Balance, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Balance", arg0, arg1)
	ret0, _ := ret[0].(entities.Balance)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Balance indicates an expected call of Balance.
func (mr *MockBalanceRepoMockRecorder) Balance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Balance", reflect.TypeOf((*MockBalanceRepo)(nil).Balance), arg0, arg1)
}

// ChangeBalance mocks base method.
func (m *MockBalanceRepo) ChangeBalance(arg0 context.Context, arg1 *entities.BalanceChange) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChangeBalance", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ChangeBalance indicates an expected call of ChangeBalance.
func (mr *MockBalanceRepoMockRecorder) ChangeBalance(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChangeBalance", reflect.TypeOf((*MockBalanceRepo)(nil).ChangeBalance), arg0, arg1)
}

// Withdrawals mocks base method.
func (m *MockBalanceRepo) Withdrawals(arg0 context.Context, arg1 int64) ([]entities.BalanceChange, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdrawals", arg0, arg1)
	ret0, _ := ret[0].([]entities.BalanceChange)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Withdrawals indicates an expected call of Withdrawals.
func (mr *MockBalanceRepoMockRecorder) Withdrawals(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdrawals", reflect.TypeOf((*MockBalanceRepo)(nil).Withdrawals), arg0, arg1)
}
